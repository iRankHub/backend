// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: internal/grpc/proto/tournament/tournament.proto

package tournament

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LeagueType int32

const (
	LeagueType_LEAGUE_TYPE_UNSPECIFIED   LeagueType = 0
	LeagueType_LEAGUE_TYPE_LOCAL         LeagueType = 1
	LeagueType_LEAGUE_TYPE_INTERNATIONAL LeagueType = 2
)

// Enum value maps for LeagueType.
var (
	LeagueType_name = map[int32]string{
		0: "LEAGUE_TYPE_UNSPECIFIED",
		1: "LEAGUE_TYPE_LOCAL",
		2: "LEAGUE_TYPE_INTERNATIONAL",
	}
	LeagueType_value = map[string]int32{
		"LEAGUE_TYPE_UNSPECIFIED":   0,
		"LEAGUE_TYPE_LOCAL":         1,
		"LEAGUE_TYPE_INTERNATIONAL": 2,
	}
)

func (x LeagueType) Enum() *LeagueType {
	p := new(LeagueType)
	*p = x
	return p
}

func (x LeagueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeagueType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_grpc_proto_tournament_tournament_proto_enumTypes[0].Descriptor()
}

func (LeagueType) Type() protoreflect.EnumType {
	return &file_internal_grpc_proto_tournament_tournament_proto_enumTypes[0]
}

func (x LeagueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeagueType.Descriptor instead.
func (LeagueType) EnumDescriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{0}
}

type TournamentFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormatId    int32  `protobuf:"varint,1,opt,name=format_id,json=formatId,proto3" json:"format_id,omitempty"`
	FormatName  string `protobuf:"bytes,2,opt,name=format_name,json=formatName,proto3" json:"format_name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TournamentFormat) Reset() {
	*x = TournamentFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TournamentFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TournamentFormat) ProtoMessage() {}

func (x *TournamentFormat) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TournamentFormat.ProtoReflect.Descriptor instead.
func (*TournamentFormat) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{0}
}

func (x *TournamentFormat) GetFormatId() int32 {
	if x != nil {
		return x.FormatId
	}
	return 0
}

func (x *TournamentFormat) GetFormatName() string {
	if x != nil {
		return x.FormatName
	}
	return ""
}

func (x *TournamentFormat) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type League struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueId   int32      `protobuf:"varint,1,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
	Name       string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LeagueType LeagueType `protobuf:"varint,3,opt,name=league_type,json=leagueType,proto3,enum=tournament.LeagueType" json:"league_type,omitempty"`
	// Types that are assignable to LeagueDetails:
	//
	//	*League_LocalDetails
	//	*League_InternationalDetails
	LeagueDetails isLeague_LeagueDetails `protobuf_oneof:"league_details"`
}

func (x *League) Reset() {
	*x = League{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *League) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*League) ProtoMessage() {}

func (x *League) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use League.ProtoReflect.Descriptor instead.
func (*League) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{1}
}

func (x *League) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *League) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *League) GetLeagueType() LeagueType {
	if x != nil {
		return x.LeagueType
	}
	return LeagueType_LEAGUE_TYPE_UNSPECIFIED
}

func (m *League) GetLeagueDetails() isLeague_LeagueDetails {
	if m != nil {
		return m.LeagueDetails
	}
	return nil
}

func (x *League) GetLocalDetails() *LocalLeagueDetails {
	if x, ok := x.GetLeagueDetails().(*League_LocalDetails); ok {
		return x.LocalDetails
	}
	return nil
}

func (x *League) GetInternationalDetails() *InternationalLeagueDetails {
	if x, ok := x.GetLeagueDetails().(*League_InternationalDetails); ok {
		return x.InternationalDetails
	}
	return nil
}

type isLeague_LeagueDetails interface {
	isLeague_LeagueDetails()
}

type League_LocalDetails struct {
	LocalDetails *LocalLeagueDetails `protobuf:"bytes,4,opt,name=local_details,json=localDetails,proto3,oneof"`
}

type League_InternationalDetails struct {
	InternationalDetails *InternationalLeagueDetails `protobuf:"bytes,5,opt,name=international_details,json=internationalDetails,proto3,oneof"`
}

func (*League_LocalDetails) isLeague_LeagueDetails() {}

func (*League_InternationalDetails) isLeague_LeagueDetails() {}

type LocalLeagueDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Province string `protobuf:"bytes,1,opt,name=province,proto3" json:"province,omitempty"`
	District string `protobuf:"bytes,2,opt,name=district,proto3" json:"district,omitempty"`
}

func (x *LocalLeagueDetails) Reset() {
	*x = LocalLeagueDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalLeagueDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalLeagueDetails) ProtoMessage() {}

func (x *LocalLeagueDetails) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalLeagueDetails.ProtoReflect.Descriptor instead.
func (*LocalLeagueDetails) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{2}
}

func (x *LocalLeagueDetails) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *LocalLeagueDetails) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

type InternationalLeagueDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Continent string `protobuf:"bytes,1,opt,name=continent,proto3" json:"continent,omitempty"`
	Country   string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *InternationalLeagueDetails) Reset() {
	*x = InternationalLeagueDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternationalLeagueDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternationalLeagueDetails) ProtoMessage() {}

func (x *InternationalLeagueDetails) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternationalLeagueDetails.ProtoReflect.Descriptor instead.
func (*InternationalLeagueDetails) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{3}
}

func (x *InternationalLeagueDetails) GetContinent() string {
	if x != nil {
		return x.Continent
	}
	return ""
}

func (x *InternationalLeagueDetails) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type Tournament struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TournamentId int32                  `protobuf:"varint,1,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Location     string                 `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Format       *TournamentFormat      `protobuf:"bytes,6,opt,name=format,proto3" json:"format,omitempty"`
	League       *League                `protobuf:"bytes,7,opt,name=league,proto3" json:"league,omitempty"`
}

func (x *Tournament) Reset() {
	*x = Tournament{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tournament) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tournament) ProtoMessage() {}

func (x *Tournament) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tournament.ProtoReflect.Descriptor instead.
func (*Tournament) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{4}
}

func (x *Tournament) GetTournamentId() int32 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

func (x *Tournament) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tournament) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Tournament) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Tournament) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Tournament) GetFormat() *TournamentFormat {
	if x != nil {
		return x.Format
	}
	return nil
}

func (x *Tournament) GetLeague() *League {
	if x != nil {
		return x.League
	}
	return nil
}

type CreateLeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LeagueType LeagueType `protobuf:"varint,2,opt,name=league_type,json=leagueType,proto3,enum=tournament.LeagueType" json:"league_type,omitempty"`
	// Types that are assignable to LeagueDetails:
	//
	//	*CreateLeagueRequest_LocalDetails
	//	*CreateLeagueRequest_InternationalDetails
	LeagueDetails isCreateLeagueRequest_LeagueDetails `protobuf_oneof:"league_details"`
}

func (x *CreateLeagueRequest) Reset() {
	*x = CreateLeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLeagueRequest) ProtoMessage() {}

func (x *CreateLeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLeagueRequest.ProtoReflect.Descriptor instead.
func (*CreateLeagueRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLeagueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLeagueRequest) GetLeagueType() LeagueType {
	if x != nil {
		return x.LeagueType
	}
	return LeagueType_LEAGUE_TYPE_UNSPECIFIED
}

func (m *CreateLeagueRequest) GetLeagueDetails() isCreateLeagueRequest_LeagueDetails {
	if m != nil {
		return m.LeagueDetails
	}
	return nil
}

func (x *CreateLeagueRequest) GetLocalDetails() *LocalLeagueDetails {
	if x, ok := x.GetLeagueDetails().(*CreateLeagueRequest_LocalDetails); ok {
		return x.LocalDetails
	}
	return nil
}

func (x *CreateLeagueRequest) GetInternationalDetails() *InternationalLeagueDetails {
	if x, ok := x.GetLeagueDetails().(*CreateLeagueRequest_InternationalDetails); ok {
		return x.InternationalDetails
	}
	return nil
}

type isCreateLeagueRequest_LeagueDetails interface {
	isCreateLeagueRequest_LeagueDetails()
}

type CreateLeagueRequest_LocalDetails struct {
	LocalDetails *LocalLeagueDetails `protobuf:"bytes,3,opt,name=local_details,json=localDetails,proto3,oneof"`
}

type CreateLeagueRequest_InternationalDetails struct {
	InternationalDetails *InternationalLeagueDetails `protobuf:"bytes,4,opt,name=international_details,json=internationalDetails,proto3,oneof"`
}

func (*CreateLeagueRequest_LocalDetails) isCreateLeagueRequest_LeagueDetails() {}

func (*CreateLeagueRequest_InternationalDetails) isCreateLeagueRequest_LeagueDetails() {}

type GetLeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueId int32 `protobuf:"varint,1,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
}

func (x *GetLeagueRequest) Reset() {
	*x = GetLeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeagueRequest) ProtoMessage() {}

func (x *GetLeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeagueRequest.ProtoReflect.Descriptor instead.
func (*GetLeagueRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{6}
}

func (x *GetLeagueRequest) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

type ListLeaguesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken int32 `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListLeaguesRequest) Reset() {
	*x = ListLeaguesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeaguesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeaguesRequest) ProtoMessage() {}

func (x *ListLeaguesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeaguesRequest.ProtoReflect.Descriptor instead.
func (*ListLeaguesRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{7}
}

func (x *ListLeaguesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListLeaguesRequest) GetPageToken() int32 {
	if x != nil {
		return x.PageToken
	}
	return 0
}

type ListLeaguesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leagues       []*League `protobuf:"bytes,1,rep,name=leagues,proto3" json:"leagues,omitempty"`
	NextPageToken int32     `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListLeaguesResponse) Reset() {
	*x = ListLeaguesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLeaguesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLeaguesResponse) ProtoMessage() {}

func (x *ListLeaguesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLeaguesResponse.ProtoReflect.Descriptor instead.
func (*ListLeaguesResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{8}
}

func (x *ListLeaguesResponse) GetLeagues() []*League {
	if x != nil {
		return x.Leagues
	}
	return nil
}

func (x *ListLeaguesResponse) GetNextPageToken() int32 {
	if x != nil {
		return x.NextPageToken
	}
	return 0
}

type UpdateLeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueId   int32      `protobuf:"varint,1,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
	Name       string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LeagueType LeagueType `protobuf:"varint,3,opt,name=league_type,json=leagueType,proto3,enum=tournament.LeagueType" json:"league_type,omitempty"`
	// Types that are assignable to LeagueDetails:
	//
	//	*UpdateLeagueRequest_LocalDetails
	//	*UpdateLeagueRequest_InternationalDetails
	LeagueDetails isUpdateLeagueRequest_LeagueDetails `protobuf_oneof:"league_details"`
}

func (x *UpdateLeagueRequest) Reset() {
	*x = UpdateLeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeagueRequest) ProtoMessage() {}

func (x *UpdateLeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeagueRequest.ProtoReflect.Descriptor instead.
func (*UpdateLeagueRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateLeagueRequest) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *UpdateLeagueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateLeagueRequest) GetLeagueType() LeagueType {
	if x != nil {
		return x.LeagueType
	}
	return LeagueType_LEAGUE_TYPE_UNSPECIFIED
}

func (m *UpdateLeagueRequest) GetLeagueDetails() isUpdateLeagueRequest_LeagueDetails {
	if m != nil {
		return m.LeagueDetails
	}
	return nil
}

func (x *UpdateLeagueRequest) GetLocalDetails() *LocalLeagueDetails {
	if x, ok := x.GetLeagueDetails().(*UpdateLeagueRequest_LocalDetails); ok {
		return x.LocalDetails
	}
	return nil
}

func (x *UpdateLeagueRequest) GetInternationalDetails() *InternationalLeagueDetails {
	if x, ok := x.GetLeagueDetails().(*UpdateLeagueRequest_InternationalDetails); ok {
		return x.InternationalDetails
	}
	return nil
}

type isUpdateLeagueRequest_LeagueDetails interface {
	isUpdateLeagueRequest_LeagueDetails()
}

type UpdateLeagueRequest_LocalDetails struct {
	LocalDetails *LocalLeagueDetails `protobuf:"bytes,4,opt,name=local_details,json=localDetails,proto3,oneof"`
}

type UpdateLeagueRequest_InternationalDetails struct {
	InternationalDetails *InternationalLeagueDetails `protobuf:"bytes,5,opt,name=international_details,json=internationalDetails,proto3,oneof"`
}

func (*UpdateLeagueRequest_LocalDetails) isUpdateLeagueRequest_LeagueDetails() {}

func (*UpdateLeagueRequest_InternationalDetails) isUpdateLeagueRequest_LeagueDetails() {}

type DeleteLeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueId int32 `protobuf:"varint,1,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
}

func (x *DeleteLeagueRequest) Reset() {
	*x = DeleteLeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeagueRequest) ProtoMessage() {}

func (x *DeleteLeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeagueRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeagueRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteLeagueRequest) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

type CreateTournamentFormatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormatName  string `protobuf:"bytes,1,opt,name=format_name,json=formatName,proto3" json:"format_name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateTournamentFormatRequest) Reset() {
	*x = CreateTournamentFormatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTournamentFormatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTournamentFormatRequest) ProtoMessage() {}

func (x *CreateTournamentFormatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTournamentFormatRequest.ProtoReflect.Descriptor instead.
func (*CreateTournamentFormatRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{11}
}

func (x *CreateTournamentFormatRequest) GetFormatName() string {
	if x != nil {
		return x.FormatName
	}
	return ""
}

func (x *CreateTournamentFormatRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GetTournamentFormatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormatId int32 `protobuf:"varint,1,opt,name=format_id,json=formatId,proto3" json:"format_id,omitempty"`
}

func (x *GetTournamentFormatRequest) Reset() {
	*x = GetTournamentFormatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTournamentFormatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTournamentFormatRequest) ProtoMessage() {}

func (x *GetTournamentFormatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTournamentFormatRequest.ProtoReflect.Descriptor instead.
func (*GetTournamentFormatRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{12}
}

func (x *GetTournamentFormatRequest) GetFormatId() int32 {
	if x != nil {
		return x.FormatId
	}
	return 0
}

type ListTournamentFormatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken int32 `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListTournamentFormatsRequest) Reset() {
	*x = ListTournamentFormatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTournamentFormatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTournamentFormatsRequest) ProtoMessage() {}

func (x *ListTournamentFormatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTournamentFormatsRequest.ProtoReflect.Descriptor instead.
func (*ListTournamentFormatsRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{13}
}

func (x *ListTournamentFormatsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTournamentFormatsRequest) GetPageToken() int32 {
	if x != nil {
		return x.PageToken
	}
	return 0
}

type ListTournamentFormatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Formats       []*TournamentFormat `protobuf:"bytes,1,rep,name=formats,proto3" json:"formats,omitempty"`
	NextPageToken int32               `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListTournamentFormatsResponse) Reset() {
	*x = ListTournamentFormatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTournamentFormatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTournamentFormatsResponse) ProtoMessage() {}

func (x *ListTournamentFormatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTournamentFormatsResponse.ProtoReflect.Descriptor instead.
func (*ListTournamentFormatsResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{14}
}

func (x *ListTournamentFormatsResponse) GetFormats() []*TournamentFormat {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *ListTournamentFormatsResponse) GetNextPageToken() int32 {
	if x != nil {
		return x.NextPageToken
	}
	return 0
}

type UpdateTournamentFormatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormatId    int32  `protobuf:"varint,1,opt,name=format_id,json=formatId,proto3" json:"format_id,omitempty"`
	FormatName  string `protobuf:"bytes,2,opt,name=format_name,json=formatName,proto3" json:"format_name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateTournamentFormatRequest) Reset() {
	*x = UpdateTournamentFormatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTournamentFormatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTournamentFormatRequest) ProtoMessage() {}

func (x *UpdateTournamentFormatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTournamentFormatRequest.ProtoReflect.Descriptor instead.
func (*UpdateTournamentFormatRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateTournamentFormatRequest) GetFormatId() int32 {
	if x != nil {
		return x.FormatId
	}
	return 0
}

func (x *UpdateTournamentFormatRequest) GetFormatName() string {
	if x != nil {
		return x.FormatName
	}
	return ""
}

func (x *UpdateTournamentFormatRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeleteTournamentFormatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormatId int32 `protobuf:"varint,1,opt,name=format_id,json=formatId,proto3" json:"format_id,omitempty"`
}

func (x *DeleteTournamentFormatRequest) Reset() {
	*x = DeleteTournamentFormatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTournamentFormatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTournamentFormatRequest) ProtoMessage() {}

func (x *DeleteTournamentFormatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTournamentFormatRequest.ProtoReflect.Descriptor instead.
func (*DeleteTournamentFormatRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteTournamentFormatRequest) GetFormatId() int32 {
	if x != nil {
		return x.FormatId
	}
	return 0
}

type CreateTournamentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Location  string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	FormatId  int32                  `protobuf:"varint,5,opt,name=format_id,json=formatId,proto3" json:"format_id,omitempty"`
	LeagueId  int32                  `protobuf:"varint,6,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
}

func (x *CreateTournamentRequest) Reset() {
	*x = CreateTournamentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTournamentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTournamentRequest) ProtoMessage() {}

func (x *CreateTournamentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTournamentRequest.ProtoReflect.Descriptor instead.
func (*CreateTournamentRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{17}
}

func (x *CreateTournamentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTournamentRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateTournamentRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *CreateTournamentRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateTournamentRequest) GetFormatId() int32 {
	if x != nil {
		return x.FormatId
	}
	return 0
}

func (x *CreateTournamentRequest) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

type GetTournamentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TournamentId int32 `protobuf:"varint,1,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id,omitempty"`
}

func (x *GetTournamentRequest) Reset() {
	*x = GetTournamentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTournamentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTournamentRequest) ProtoMessage() {}

func (x *GetTournamentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTournamentRequest.ProtoReflect.Descriptor instead.
func (*GetTournamentRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{18}
}

func (x *GetTournamentRequest) GetTournamentId() int32 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

type ListTournamentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken int32 `protobuf:"varint,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListTournamentsRequest) Reset() {
	*x = ListTournamentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTournamentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTournamentsRequest) ProtoMessage() {}

func (x *ListTournamentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTournamentsRequest.ProtoReflect.Descriptor instead.
func (*ListTournamentsRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{19}
}

func (x *ListTournamentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTournamentsRequest) GetPageToken() int32 {
	if x != nil {
		return x.PageToken
	}
	return 0
}

type ListTournamentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tournaments   []*Tournament `protobuf:"bytes,1,rep,name=tournaments,proto3" json:"tournaments,omitempty"`
	NextPageToken int32         `protobuf:"varint,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListTournamentsResponse) Reset() {
	*x = ListTournamentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTournamentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTournamentsResponse) ProtoMessage() {}

func (x *ListTournamentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTournamentsResponse.ProtoReflect.Descriptor instead.
func (*ListTournamentsResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{20}
}

func (x *ListTournamentsResponse) GetTournaments() []*Tournament {
	if x != nil {
		return x.Tournaments
	}
	return nil
}

func (x *ListTournamentsResponse) GetNextPageToken() int32 {
	if x != nil {
		return x.NextPageToken
	}
	return 0
}

type UpdateTournamentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TournamentId int32                  `protobuf:"varint,1,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Location     string                 `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	FormatId     int32                  `protobuf:"varint,6,opt,name=format_id,json=formatId,proto3" json:"format_id,omitempty"`
	LeagueId     int32                  `protobuf:"varint,7,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
}

func (x *UpdateTournamentRequest) Reset() {
	*x = UpdateTournamentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTournamentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTournamentRequest) ProtoMessage() {}

func (x *UpdateTournamentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTournamentRequest.ProtoReflect.Descriptor instead.
func (*UpdateTournamentRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateTournamentRequest) GetTournamentId() int32 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

func (x *UpdateTournamentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTournamentRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateTournamentRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpdateTournamentRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateTournamentRequest) GetFormatId() int32 {
	if x != nil {
		return x.FormatId
	}
	return 0
}

func (x *UpdateTournamentRequest) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

type DeleteTournamentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TournamentId int32 `protobuf:"varint,1,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id,omitempty"`
}

func (x *DeleteTournamentRequest) Reset() {
	*x = DeleteTournamentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTournamentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTournamentRequest) ProtoMessage() {}

func (x *DeleteTournamentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_proto_tournament_tournament_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTournamentRequest.ProtoReflect.Descriptor instead.
func (*DeleteTournamentRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteTournamentRequest) GetTournamentId() int32 {
	if x != nil {
		return x.TournamentId
	}
	return 0
}

var File_internal_grpc_proto_tournament_tournament_proto protoreflect.FileDescriptor

var file_internal_grpc_proto_tournament_tournament_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x10, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xaa, 0x02, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x6c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5d, 0x0a, 0x15, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x4c, 0x0a, 0x12,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x22, 0x54, 0x0a, 0x1a, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x69, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0xb5, 0x02, 0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x06,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x52, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a,
	0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x5d, 0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x14, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb7, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x5d,
	0x0a, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x14, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x10, 0x0a,
	0x0e, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7f,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x07,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x7f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x3c, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x22, 0xf5,
	0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x7b, 0x0a, 0x17, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9a, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75,
	0x65, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x2a, 0x5f, 0x0a, 0x0a, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x45, 0x41, 0x47, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x4c, 0x45, 0x41, 0x47, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f,
	0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x45, 0x41, 0x47, 0x55, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x41, 0x4c, 0x10, 0x02, 0x32, 0xfd, 0x09, 0x0a, 0x11, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x1f, 0x2e, 0x74, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x74, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12,
	0x3d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x1c, 0x2e, 0x74,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x74, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x4e,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x12, 0x1e, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x1f,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x12, 0x1f, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x29, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x5b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x26, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x6c, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x29, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x5b, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x29, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x74,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x52, 0x61, 0x6e, 0x6b, 0x48, 0x75, 0x62, 0x2f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_grpc_proto_tournament_tournament_proto_rawDescOnce sync.Once
	file_internal_grpc_proto_tournament_tournament_proto_rawDescData = file_internal_grpc_proto_tournament_tournament_proto_rawDesc
)

func file_internal_grpc_proto_tournament_tournament_proto_rawDescGZIP() []byte {
	file_internal_grpc_proto_tournament_tournament_proto_rawDescOnce.Do(func() {
		file_internal_grpc_proto_tournament_tournament_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_grpc_proto_tournament_tournament_proto_rawDescData)
	})
	return file_internal_grpc_proto_tournament_tournament_proto_rawDescData
}

var file_internal_grpc_proto_tournament_tournament_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_grpc_proto_tournament_tournament_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_internal_grpc_proto_tournament_tournament_proto_goTypes = []interface{}{
	(LeagueType)(0),                       // 0: tournament.LeagueType
	(*TournamentFormat)(nil),              // 1: tournament.TournamentFormat
	(*League)(nil),                        // 2: tournament.League
	(*LocalLeagueDetails)(nil),            // 3: tournament.LocalLeagueDetails
	(*InternationalLeagueDetails)(nil),    // 4: tournament.InternationalLeagueDetails
	(*Tournament)(nil),                    // 5: tournament.Tournament
	(*CreateLeagueRequest)(nil),           // 6: tournament.CreateLeagueRequest
	(*GetLeagueRequest)(nil),              // 7: tournament.GetLeagueRequest
	(*ListLeaguesRequest)(nil),            // 8: tournament.ListLeaguesRequest
	(*ListLeaguesResponse)(nil),           // 9: tournament.ListLeaguesResponse
	(*UpdateLeagueRequest)(nil),           // 10: tournament.UpdateLeagueRequest
	(*DeleteLeagueRequest)(nil),           // 11: tournament.DeleteLeagueRequest
	(*CreateTournamentFormatRequest)(nil), // 12: tournament.CreateTournamentFormatRequest
	(*GetTournamentFormatRequest)(nil),    // 13: tournament.GetTournamentFormatRequest
	(*ListTournamentFormatsRequest)(nil),  // 14: tournament.ListTournamentFormatsRequest
	(*ListTournamentFormatsResponse)(nil), // 15: tournament.ListTournamentFormatsResponse
	(*UpdateTournamentFormatRequest)(nil), // 16: tournament.UpdateTournamentFormatRequest
	(*DeleteTournamentFormatRequest)(nil), // 17: tournament.DeleteTournamentFormatRequest
	(*CreateTournamentRequest)(nil),       // 18: tournament.CreateTournamentRequest
	(*GetTournamentRequest)(nil),          // 19: tournament.GetTournamentRequest
	(*ListTournamentsRequest)(nil),        // 20: tournament.ListTournamentsRequest
	(*ListTournamentsResponse)(nil),       // 21: tournament.ListTournamentsResponse
	(*UpdateTournamentRequest)(nil),       // 22: tournament.UpdateTournamentRequest
	(*DeleteTournamentRequest)(nil),       // 23: tournament.DeleteTournamentRequest
	(*timestamppb.Timestamp)(nil),         // 24: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 25: google.protobuf.Empty
}
var file_internal_grpc_proto_tournament_tournament_proto_depIdxs = []int32{
	0,  // 0: tournament.League.league_type:type_name -> tournament.LeagueType
	3,  // 1: tournament.League.local_details:type_name -> tournament.LocalLeagueDetails
	4,  // 2: tournament.League.international_details:type_name -> tournament.InternationalLeagueDetails
	24, // 3: tournament.Tournament.start_date:type_name -> google.protobuf.Timestamp
	24, // 4: tournament.Tournament.end_date:type_name -> google.protobuf.Timestamp
	1,  // 5: tournament.Tournament.format:type_name -> tournament.TournamentFormat
	2,  // 6: tournament.Tournament.league:type_name -> tournament.League
	0,  // 7: tournament.CreateLeagueRequest.league_type:type_name -> tournament.LeagueType
	3,  // 8: tournament.CreateLeagueRequest.local_details:type_name -> tournament.LocalLeagueDetails
	4,  // 9: tournament.CreateLeagueRequest.international_details:type_name -> tournament.InternationalLeagueDetails
	2,  // 10: tournament.ListLeaguesResponse.leagues:type_name -> tournament.League
	0,  // 11: tournament.UpdateLeagueRequest.league_type:type_name -> tournament.LeagueType
	3,  // 12: tournament.UpdateLeagueRequest.local_details:type_name -> tournament.LocalLeagueDetails
	4,  // 13: tournament.UpdateLeagueRequest.international_details:type_name -> tournament.InternationalLeagueDetails
	1,  // 14: tournament.ListTournamentFormatsResponse.formats:type_name -> tournament.TournamentFormat
	24, // 15: tournament.CreateTournamentRequest.start_date:type_name -> google.protobuf.Timestamp
	24, // 16: tournament.CreateTournamentRequest.end_date:type_name -> google.protobuf.Timestamp
	5,  // 17: tournament.ListTournamentsResponse.tournaments:type_name -> tournament.Tournament
	24, // 18: tournament.UpdateTournamentRequest.start_date:type_name -> google.protobuf.Timestamp
	24, // 19: tournament.UpdateTournamentRequest.end_date:type_name -> google.protobuf.Timestamp
	6,  // 20: tournament.TournamentService.CreateLeague:input_type -> tournament.CreateLeagueRequest
	7,  // 21: tournament.TournamentService.GetLeague:input_type -> tournament.GetLeagueRequest
	8,  // 22: tournament.TournamentService.ListLeagues:input_type -> tournament.ListLeaguesRequest
	10, // 23: tournament.TournamentService.UpdateLeague:input_type -> tournament.UpdateLeagueRequest
	11, // 24: tournament.TournamentService.DeleteLeague:input_type -> tournament.DeleteLeagueRequest
	12, // 25: tournament.TournamentService.CreateTournamentFormat:input_type -> tournament.CreateTournamentFormatRequest
	13, // 26: tournament.TournamentService.GetTournamentFormat:input_type -> tournament.GetTournamentFormatRequest
	14, // 27: tournament.TournamentService.ListTournamentFormats:input_type -> tournament.ListTournamentFormatsRequest
	16, // 28: tournament.TournamentService.UpdateTournamentFormat:input_type -> tournament.UpdateTournamentFormatRequest
	17, // 29: tournament.TournamentService.DeleteTournamentFormat:input_type -> tournament.DeleteTournamentFormatRequest
	18, // 30: tournament.TournamentService.CreateTournament:input_type -> tournament.CreateTournamentRequest
	19, // 31: tournament.TournamentService.GetTournament:input_type -> tournament.GetTournamentRequest
	20, // 32: tournament.TournamentService.ListTournaments:input_type -> tournament.ListTournamentsRequest
	22, // 33: tournament.TournamentService.UpdateTournament:input_type -> tournament.UpdateTournamentRequest
	23, // 34: tournament.TournamentService.DeleteTournament:input_type -> tournament.DeleteTournamentRequest
	2,  // 35: tournament.TournamentService.CreateLeague:output_type -> tournament.League
	2,  // 36: tournament.TournamentService.GetLeague:output_type -> tournament.League
	9,  // 37: tournament.TournamentService.ListLeagues:output_type -> tournament.ListLeaguesResponse
	2,  // 38: tournament.TournamentService.UpdateLeague:output_type -> tournament.League
	25, // 39: tournament.TournamentService.DeleteLeague:output_type -> google.protobuf.Empty
	1,  // 40: tournament.TournamentService.CreateTournamentFormat:output_type -> tournament.TournamentFormat
	1,  // 41: tournament.TournamentService.GetTournamentFormat:output_type -> tournament.TournamentFormat
	15, // 42: tournament.TournamentService.ListTournamentFormats:output_type -> tournament.ListTournamentFormatsResponse
	1,  // 43: tournament.TournamentService.UpdateTournamentFormat:output_type -> tournament.TournamentFormat
	25, // 44: tournament.TournamentService.DeleteTournamentFormat:output_type -> google.protobuf.Empty
	5,  // 45: tournament.TournamentService.CreateTournament:output_type -> tournament.Tournament
	5,  // 46: tournament.TournamentService.GetTournament:output_type -> tournament.Tournament
	21, // 47: tournament.TournamentService.ListTournaments:output_type -> tournament.ListTournamentsResponse
	5,  // 48: tournament.TournamentService.UpdateTournament:output_type -> tournament.Tournament
	25, // 49: tournament.TournamentService.DeleteTournament:output_type -> google.protobuf.Empty
	35, // [35:50] is the sub-list for method output_type
	20, // [20:35] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_internal_grpc_proto_tournament_tournament_proto_init() }
func file_internal_grpc_proto_tournament_tournament_proto_init() {
	if File_internal_grpc_proto_tournament_tournament_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TournamentFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*League); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalLeagueDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternationalLeagueDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tournament); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeaguesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLeaguesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTournamentFormatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTournamentFormatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTournamentFormatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTournamentFormatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTournamentFormatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTournamentFormatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTournamentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTournamentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTournamentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTournamentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTournamentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_grpc_proto_tournament_tournament_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTournamentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_grpc_proto_tournament_tournament_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*League_LocalDetails)(nil),
		(*League_InternationalDetails)(nil),
	}
	file_internal_grpc_proto_tournament_tournament_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*CreateLeagueRequest_LocalDetails)(nil),
		(*CreateLeagueRequest_InternationalDetails)(nil),
	}
	file_internal_grpc_proto_tournament_tournament_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*UpdateLeagueRequest_LocalDetails)(nil),
		(*UpdateLeagueRequest_InternationalDetails)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_grpc_proto_tournament_tournament_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_grpc_proto_tournament_tournament_proto_goTypes,
		DependencyIndexes: file_internal_grpc_proto_tournament_tournament_proto_depIdxs,
		EnumInfos:         file_internal_grpc_proto_tournament_tournament_proto_enumTypes,
		MessageInfos:      file_internal_grpc_proto_tournament_tournament_proto_msgTypes,
	}.Build()
	File_internal_grpc_proto_tournament_tournament_proto = out.File
	file_internal_grpc_proto_tournament_tournament_proto_rawDesc = nil
	file_internal_grpc_proto_tournament_tournament_proto_goTypes = nil
	file_internal_grpc_proto_tournament_tournament_proto_depIdxs = nil
}
